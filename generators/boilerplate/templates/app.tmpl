"use strict";

var Worker = require("krew").Worker;
var Transport = require("kimbu").Transport;
var karl = require("karl");
var <%= pkgSafeName %>Handler = require("./lib");

karl.setOptions({
  json: false,
  colorize: true
});

const RabbitMQTransport = Transport.providers.RabbitMQTransport;
const transport = new RabbitMQTransport();
const <%= pkgSafeName %> = new Worker("<%= pkgSafeName %>", transport, <%= pkgSafeName %>Handler);

function init(callback) {
  //TODO: add your initialisation logic here
  //e.g. create a database connection
  //example:
  //const url = "mongodb://localhost:27017/mydatabase";
  //const MongoClient = require("mongodb").MongoClient;
  //MongoClient.connect(url, function(err, db) {
  //  if (err) {
  //    callback(err);
  //  } else {
  //    //attach mongodbConnection to <%= pkgSafeName %> worker
  //    <%= pkgSafeName %>.mongodbConnection = db;
  //    callback(null);
  //  }
  //});

  callback(null);
}


function main() {
  init(function(err) {
    if (err) {
      console.error("Error initialising <%= pkgSafeName %>", err);
      process.exit(-1);
    }
    <%= pkgSafeName %>.start(function(err) {
      if (err) {
        console.error("Error starting <%= pkgSafeName %>", err);
        process.exit(-1);
      }

      //from here on it is possible to call <%= pkgSafeName %>.request and <%= pkgSafeName %>.publish

      process.on("SIGINT", function() {
        setImmediate(process.exit.bind(null, 0));
      });
    });
  });
}

main();
